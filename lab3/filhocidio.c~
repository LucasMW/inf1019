
#include <signal.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include<wait.h>
#define EVER ;;
void childhandler(int signo);
int delay;
int main (int argc, char *argv[])
{
pid_t pid;
printf("Oi\n");
//signal(SIGCHLD, childhandler);
printf("Maldita Signal\n");
if ((pid = fork()) < 0)
{
 printf("fork<0\n");
fprintf(stderr, "Erro ao criar filho\n");
exit(-1);
}
if (pid == 0) /* child */
{
for(EVER); /* ou sleep(3);*/
printf("Starting FOREVER loop\n");
}
else /* parent */
{
printf("Pai aqui\n");
sscanf(argv[1], "%d", &delay); /* read delay from command line */
printf("Rweady to sleep\n");
sleep(delay);
printf("Program %s exceeded limit of %d seconds!\n", argv[2], delay);
kill(pid, SIGKILL);
}
return 0;
}
void childhandler(int signo) /* Executed if child dies before parent */
{
int status;
pid_t pid = wait(&status);
printf("Child %d terminated within %d seconds com estado %d.\n", pid, delay,status);
exit(0);
}
